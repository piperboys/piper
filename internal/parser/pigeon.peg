{
package parser

import "reflect"
import "fmt"
}

Input <- input:((sf Expression sf)* ln)* EOF {
    return extract_expression(input)
}

Expression <- exp:(Operation / Constant)

Operation <- left:Expression sf operator:Operator sf right:Expression {
    return extractOperation(left, operator, right)
}

Operator <- operator:(`+` / `-` / `/` / `*` / `|` / `|>`) {
    return extractOperator(operator)
}

Constant <- Integer
Integer <- integer:[0-9]+ {
    return extractInteger(integer)
}

sf "spacefiller" <- [ \t]*
ln "linebreak" <- [\n\r]+
EOF<- !.
